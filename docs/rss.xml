<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Paimon's blog</title><link>https://paimonlee.github.io/paimon.github.io</link><description>Life is a fucking movies 人生如戲啊，靚仔！</description><copyright>Paimon's blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/38132146</url><title>avatar</title><link>https://paimonlee.github.io/paimon.github.io</link></image><lastBuildDate>Fri, 21 Jun 2024 09:04:19 +0000</lastBuildDate><managingEditor>Paimon's blog</managingEditor><ttl>60</ttl><webMaster>Paimon's blog</webMaster><item><title>【Python】协程</title><link>https://paimonlee.github.io/paimon.github.io/post/%E3%80%90Python%E3%80%91-xie-cheng.html</link><description># 关键字&#13;
&#13;
async、await、asyncio&#13;
&#13;
# 运行一个协程&#13;
&#13;
```python&#13;
import asyncio&#13;
&#13;
async def main():&#13;
    print('hello')&#13;
    await asyncio.sleep(1)&#13;
    print('world')&#13;
&#13;
asyncio.run(main())&#13;
```&#13;
&#13;
要实际运行一个协程，asyncio 提供了一下几种机制：&#13;
&#13;
- asyncio.run()函数用来运行最高层级的入口点'main()'函数&#13;
  &#13;
- 对协程执行await。</description><guid isPermaLink="true">https://paimonlee.github.io/paimon.github.io/post/%E3%80%90Python%E3%80%91-xie-cheng.html</guid><pubDate>Thu, 20 Jun 2024 14:00:10 +0000</pubDate></item><item><title>【Git】stash</title><link>https://paimonlee.github.io/paimon.github.io/post/%E3%80%90Git%E3%80%91stash.html</link><description># 隐藏指定文件&#13;
一般情况下，暂时隐藏修改的命令是&#13;
```shell&#13;
# 使用上一个commit的信息&#13;
git stash&#13;
# 使用指定信息&#13;
git stash -m 'This is a message'&#13;
```&#13;
&#13;
git stash支持隐藏指定文件，在隐藏指定文件时，不能省略push参数，必须使用完整的命令&#13;
```shell&#13;
git stash push **/*.java&#13;
git stash push -m 'This is a message' **/*.java&#13;
```&#13;
&#13;
# 使用指定的隐藏记录&#13;
一般情况下使用指定的隐藏记录命令是&#13;
```shell&#13;
git stash pop [index]&#13;
```&#13;
&#13;
在没有冲突的情况下，这个命令会把隐藏给删除。</description><guid isPermaLink="true">https://paimonlee.github.io/paimon.github.io/post/%E3%80%90Git%E3%80%91stash.html</guid><pubDate>Thu, 20 Jun 2024 07:42:49 +0000</pubDate></item><item><title>协程</title><link>https://paimonlee.github.io/paimon.github.io/post/xie-cheng.html</link><description># 关键词&#13;
&#13;
coroutine、yield、next、send&#13;
&#13;
# 协程（coroutine）&#13;
&#13;
协作式多任务的子程序，允许执行被挂起与被恢复。</description><guid isPermaLink="true">https://paimonlee.github.io/paimon.github.io/post/xie-cheng.html</guid><pubDate>Thu, 20 Jun 2024 03:59:38 +0000</pubDate></item></channel></rss>